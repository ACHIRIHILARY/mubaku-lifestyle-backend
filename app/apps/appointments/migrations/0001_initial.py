# Generated by Django 5.2 on 2025-09-30 19:38

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("services", "__first__"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("scheduled_for", models.DateTimeField()),
                ("scheduled_until", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("declined", "Declined"),
                            ("client_cancelled", "Cancelled by Client"),
                            ("provider_cancelled", "Cancelled by Provider"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("currency", models.CharField(default="XAF", max_length=3)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("held_in_escrow", "Held in Escrow"),
                            ("released_to_provider", "Released to Provider"),
                            ("refunded_to_client", "Refunded to Client"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_appointments",
                        to="users.profile",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_appointments",
                        to="users.profile",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="services.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Appointment",
                "verbose_name_plural": "Appointments",
            },
        ),
        migrations.CreateModel(
            name="AppointmentSlot",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slot_start", models.DateTimeField()),
                ("slot_end", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("booked", "Booked"),
                            ("blocked", "Blocked"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="appointments.appointment",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slots",
                        to="users.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Appointment Slot",
                "verbose_name_plural": "Appointment Slots",
            },
        ),
        migrations.CreateModel(
            name="ProviderAvailability",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "day_of_week",
                    models.SmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(6),
                        ]
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_available", models.BooleanField(default=True)),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="users.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider Availability",
                "verbose_name_plural": "Provider Availabilities",
            },
        ),
        migrations.CreateModel(
            name="ProviderAvailabilityException",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("exception_date", models.DateField()),
                (
                    "exception_type",
                    models.CharField(
                        choices=[
                            ("unavailable", "Unavailable"),
                            ("available", "Available"),
                            ("modified_hours", "Modified Hours"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_time", models.TimeField(blank=True, null=True)),
                ("reason", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability_exceptions",
                        to="users.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider Availability Exception",
                "verbose_name_plural": "Provider Availability Exceptions",
            },
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["client"], name="appointment_client__1de7de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["provider"], name="appointment_provide_59b198_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(fields=["status"], name="appointment_status_8fe9d7_idx"),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["payment_status"], name="appointment_payment_79f9ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["scheduled_for"], name="appointment_schedul_fa8dbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointmentslot",
            index=models.Index(
                fields=["provider"], name="appointment_provide_f83fb3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointmentslot",
            index=models.Index(
                fields=["slot_start", "slot_end"], name="appointment_slot_st_bfb101_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointmentslot",
            index=models.Index(fields=["status"], name="appointment_status_13c317_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="appointmentslot",
            unique_together={("provider", "slot_start")},
        ),
        migrations.AddIndex(
            model_name="provideravailability",
            index=models.Index(
                fields=["provider", "day_of_week"],
                name="appointment_provide_a02f3d_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="provideravailability",
            unique_together={("provider", "day_of_week")},
        ),
        migrations.AddIndex(
            model_name="provideravailabilityexception",
            index=models.Index(
                fields=["provider", "exception_date"],
                name="appointment_provide_67c20e_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="provideravailabilityexception",
            unique_together={("provider", "exception_date")},
        ),
    ]
